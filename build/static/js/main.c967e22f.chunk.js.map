{"version":3,"sources":["components/Filter.js","components/Form.js","components/Person.js","components/People.js","components/Notification.js","services/phonebook.js","App.js","index.js"],"names":["Filter","value","handler","onChange","Form","props","onSubmit","name","nameHandler","phone","phoneHandler","type","Person","person","deleteContact","number","onClick","People","persons","map","Notification","message","className","class","text","baseUrl","exportedObject","getAll","axios","get","then","response","data","create","newObject","post","update","id","newContact","put","delete","App","useState","setPersons","newName","setNewName","newPhone","setNewPhone","filter","setFilter","notification","setNotification","useEffect","phonebookService","initialPersons","personsToShow","toLowerCase","includes","inputHandler","event","target","preventDefault","existingContact","find","window","confirm","updatedContact","setTimeout","catch","error","personObject","concat","console","log","updatedPersons","p","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c967e22f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({value, handler}) => {\t\r\n  return (\r\n\t<div>\r\n      filter shown with <input value={value} onChange={handler} />\r\n\t</div>  \r\n  )\t\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Form = (props) => {\r\n  return (\r\n    <form onSubmit={props.handler}>\r\n      <div>\r\n        name: <input value={props.name} onChange={props.nameHandler} />\r\n      </div>\r\n\t  <div>\r\n\t\tnumber: <input value={props.phone} onChange={props.phoneHandler} />\r\n\t  </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form","import React from 'react'\r\n\r\nconst Person = ({ person, deleteContact }) => {\r\n  return (\r\n    <li>\r\n\t  {person.name} {person.number} \r\n\t  <button onClick={() => deleteContact(person)}>delete</button>\r\n\t</li>\r\n  )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst People = ({persons, deleteContact}) => {\r\n  return (\r\n    <ul>\r\n      {persons.map(person => \r\n        <Person key={person.name} person={person} deleteContact={deleteContact} />\r\n       )}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default People","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={message.class}>\r\n      {message.text}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\n//const baseUrl = 'http://localhost:3001/api/persons'\r\n//const baseUrl = 'https://secret-basin-29496.herokuapp.com/api/persons'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newContact) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newContact)\r\n  return request.then(response => response.data)  \r\n}\r\n\r\nconst deleteContact = id => {\t\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\t\r\n\r\nconst exportedObject = {\r\n getAll,\r\n create,\r\n update,\r\n deleteContact\r\n}\r\n\r\nexport default exportedObject","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Form from './components/Form'\nimport People from './components/People'\nimport Notification from './components/Notification'\nimport phonebookService from './services/phonebook'\t\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newPhone, setNewPhone ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ notification, setNotification ] = useState(null)\n  \n  useEffect(() => {\n    phonebookService.getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const personsToShow = filter ? persons.filter((person => person.name.toLowerCase().includes(filter.toLowerCase()))) : persons  \n  \n  const addPerson = (event) => {\n\tevent.preventDefault();\n\tconst existingContact = persons.find(person => person.name === newName)\n    if (existingContact) {\n\t  if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n\t\tphonebookService.update(existingContact.id, {...existingContact, number: newPhone})\n\t\t  .then(updatedContact => { \n\t\t\tsetPersons(persons.map(person => person.id !== existingContact.id ? person : updatedContact))\n\t\t\tsetNewName('')\n\t\t\tsetNewPhone('')\n\t\t\tsetNotification({text: `Number for ${existingContact.name} changed`, class: 'notification'})\n\t\t\tsetTimeout(() => {\n\t\t\t  setNotification(null)\n\t\t\t}, 5000) \n\t\t  })\n          .catch(error => {\n\t\t\tsetNotification({text: `Information of ${existingContact.name} has already been removed from server`, class: 'error'})\n\t\t\tsetTimeout(() => {\n\t\t\t  setNotification(null)\n\t\t\t}, 5000)\n\t\t\tsetPersons(persons.filter(person => person.id !== existingContact.id))\n\t\t\tsetNewName('')\n\t\t\tsetNewPhone('')\n\t\t  })\t\t  \n\t  }\t  \n\t} else {\n\t  const personObject = {name: newName, number: newPhone}\t  \n\t  phonebookService.create(personObject)\n        .then(newContact => {\n\t\t  setPersons(persons.concat(newContact))\n\t\t  setNewName('')\n          setNewPhone('')\n\t\t  setNotification({text: `Added ${newContact.name}`, class: 'notification'})\n\t\t  setTimeout(() => {\n\t\t\tsetNotification(null)\n\t\t  }, 5000)\t\n\t    })\n\t\t.catch(error => {\n\t\t\tconsole.log('Error', error)\n\t\t})\n    }\t\t\n  }\n  \n  const deleteContact = person => {\n\tif (window.confirm(`Delete ${person.name}?`)) {\n      const id = person.id\t\t\t\t\n\t  phonebookService.deleteContact(id)\n\t    .then(updatedPersons => {\n\t\t  setPersons(persons.filter((p => p.id !== id)))  \n\t    })\n\t}\t\n  }  \n  \n  const inputHandler = (handler) => {\n\treturn (event) => handler(event.target.value)  \n  }\t  \n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n\t  <Notification message={notification} />\n\t  <Filter value={filter} handler={inputHandler(setFilter)} />\n\t  <h2>Add a new</h2>\n      <Form handler={addPerson} name={newName} nameHandler={inputHandler(setNewName)} phone={newPhone} phoneHandler={inputHandler(setNewPhone)} />\n      <h2>Numbers</h2>\n      <People persons={personsToShow} deleteContact={deleteContact} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}